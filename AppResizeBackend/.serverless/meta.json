{
  "C:\\practice\\ImageResizerApp\\AppResizeBackend\\serverless.yml": {
    "versionFramework": "4.18.0",
    "servicePath": "C:\\practice\\ImageResizerApp\\AppResizeBackend\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "image-resizer",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "ap-southeast-2",
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "s3:GetObject",
              "s3:PutObject"
            ],
            "Resource": "arn:aws:s3:::image-resizer-uploads/*"
          }
        ],
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "GetPresignedUrlLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/image-resizer-dev-getPresignedUrl"
              }
            },
            "ImageProcessorLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/image-resizer-dev-imageProcessor"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "image-resizer",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/image-resizer-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/image-resizer-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "s3:GetObject",
                            "s3:PutObject"
                          ],
                          "Resource": "arn:aws:s3:::image-resizer-uploads/*"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "image-resizer",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "GetPresignedUrlLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-ap-southeast-2-eccec8d5-1372",
                  "S3Key": "serverless/image-resizer/dev/1754553425290-2025-08-07T07:57:05.290Z/image-resizer.zip"
                },
                "Handler": "getPresignedUrl/index.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "image-resizer-dev-getPresignedUrl",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetPresignedUrlLogGroup"
              ]
            },
            "ImageProcessorLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-ap-southeast-2-eccec8d5-1372",
                  "S3Key": "serverless/image-resizer/dev/1754553425290-2025-08-07T07:57:05.290Z/image-resizer.zip"
                },
                "Handler": "imageProcessor/index.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "image-resizer-dev-imageProcessor",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ImageProcessorLogGroup"
              ]
            },
            "GetPresignedUrlLambdaVersion48b7gTxtzfG4EEgt3ioCZOw7ds2snQAVLQ7n5rQzC0M": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetPresignedUrlLambdaFunction"
                },
                "CodeSha256": "2bLiKJwt5+8smfFmD+FiSQrhDdRVJX06lrHg+6ecn38="
              }
            },
            "ImageProcessorLambdaVersionCulWCjSk1szd7hG5doMn7i6nk9PhVnfZciL8RGJBXk": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ImageProcessorLambdaFunction"
                },
                "CodeSha256": "2bLiKJwt5+8smfFmD+FiSQrhDdRVJX06lrHg+6ecn38="
              }
            },
            "S3BucketImageresizeruploads": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketName": "image-resizer-uploads",
                "NotificationConfiguration": {
                  "LambdaConfigurations": [
                    {
                      "Event": "s3:ObjectCreated:*",
                      "Function": {
                        "Fn::GetAtt": [
                          "ImageProcessorLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Filter": {
                        "S3Key": {
                          "Rules": [
                            {
                              "Name": "prefix",
                              "Value": "uploads/original/"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "DependsOn": [
                "ImageProcessorLambdaPermissionImageresizeruploadsS3"
              ]
            },
            "ImageProcessorLambdaPermissionImageresizeruploadsS3": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ImageProcessorLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "s3.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::image-resizer-uploads"
                    ]
                  ]
                },
                "SourceAccount": {
                  "Ref": "AWS::AccountId"
                }
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-image-resizer",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourcePresignedDashurl": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "presigned-url",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodPresignedDashurlOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePresignedDashurl"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodPresignedDashurlGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePresignedDashurl"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetPresignedUrlLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetPresignedUrlLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1754553406686": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodPresignedDashurlOptions",
                "ApiGatewayMethodPresignedDashurlGet"
              ]
            },
            "GetPresignedUrlLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetPresignedUrlLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-ap-southeast-2-eccec8d5-1372",
              "Export": {
                "Name": "sls-image-resizer-dev-ServerlessDeploymentBucketName"
              }
            },
            "GetPresignedUrlLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetPresignedUrlLambdaVersion48b7gTxtzfG4EEgt3ioCZOw7ds2snQAVLQ7n5rQzC0M"
              },
              "Export": {
                "Name": "sls-image-resizer-dev-GetPresignedUrlLambdaFunctionQualifiedArn"
              }
            },
            "ImageProcessorLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ImageProcessorLambdaVersionCulWCjSk1szd7hG5doMn7i6nk9PhVnfZciL8RGJBXk"
              },
              "Export": {
                "Name": "sls-image-resizer-dev-ImageProcessorLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-image-resizer-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "getPresignedUrl": {
          "handler": "getPresignedUrl/index.handler",
          "events": [
            {
              "http": {
                "path": "presigned-url",
                "method": "get",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "image-resizer-dev-getPresignedUrl",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "GetPresignedUrlLambdaVersion48b7gTxtzfG4EEgt3ioCZOw7ds2snQAVLQ7n5rQzC0M"
        },
        "imageProcessor": {
          "handler": "imageProcessor/index.handler",
          "events": [
            {
              "s3": {
                "bucket": "image-resizer-uploads",
                "event": "s3:ObjectCreated:*",
                "rules": [
                  {
                    "prefix": "uploads/original/"
                  }
                ]
              }
            }
          ],
          "name": "image-resizer-dev-imageProcessor",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "ImageProcessorLambdaVersionCulWCjSk1szd7hG5doMn7i6nk9PhVnfZciL8RGJBXk"
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "ap-southeast-2",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:GetObject",
            "s3:PutObject"
          ],
          "Resource": "arn:aws:s3:::image-resizer-uploads/*"
        }
      ],
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "GetPresignedUrlLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/image-resizer-dev-getPresignedUrl"
            }
          },
          "ImageProcessorLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/image-resizer-dev-imageProcessor"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "image-resizer",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/image-resizer-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/image-resizer-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:GetObject",
                          "s3:PutObject"
                        ],
                        "Resource": "arn:aws:s3:::image-resizer-uploads/*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "image-resizer",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetPresignedUrlLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-ap-southeast-2-eccec8d5-1372",
                "S3Key": "serverless/image-resizer/dev/1754553425290-2025-08-07T07:57:05.290Z/image-resizer.zip"
              },
              "Handler": "getPresignedUrl/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "image-resizer-dev-getPresignedUrl",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetPresignedUrlLogGroup"
            ]
          },
          "ImageProcessorLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-ap-southeast-2-eccec8d5-1372",
                "S3Key": "serverless/image-resizer/dev/1754553425290-2025-08-07T07:57:05.290Z/image-resizer.zip"
              },
              "Handler": "imageProcessor/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "image-resizer-dev-imageProcessor",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ImageProcessorLogGroup"
            ]
          },
          "GetPresignedUrlLambdaVersion48b7gTxtzfG4EEgt3ioCZOw7ds2snQAVLQ7n5rQzC0M": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetPresignedUrlLambdaFunction"
              },
              "CodeSha256": "2bLiKJwt5+8smfFmD+FiSQrhDdRVJX06lrHg+6ecn38="
            }
          },
          "ImageProcessorLambdaVersionCulWCjSk1szd7hG5doMn7i6nk9PhVnfZciL8RGJBXk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ImageProcessorLambdaFunction"
              },
              "CodeSha256": "2bLiKJwt5+8smfFmD+FiSQrhDdRVJX06lrHg+6ecn38="
            }
          },
          "S3BucketImageresizeruploads": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "image-resizer-uploads",
              "NotificationConfiguration": {
                "LambdaConfigurations": [
                  {
                    "Event": "s3:ObjectCreated:*",
                    "Function": {
                      "Fn::GetAtt": [
                        "ImageProcessorLambdaFunction",
                        "Arn"
                      ]
                    },
                    "Filter": {
                      "S3Key": {
                        "Rules": [
                          {
                            "Name": "prefix",
                            "Value": "uploads/original/"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            },
            "DependsOn": [
              "ImageProcessorLambdaPermissionImageresizeruploadsS3"
            ]
          },
          "ImageProcessorLambdaPermissionImageresizeruploadsS3": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ImageProcessorLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "s3.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":s3:::image-resizer-uploads"
                  ]
                ]
              },
              "SourceAccount": {
                "Ref": "AWS::AccountId"
              }
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-image-resizer",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourcePresignedDashurl": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "presigned-url",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPresignedDashurlOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePresignedDashurl"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPresignedDashurlGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePresignedDashurl"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetPresignedUrlLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetPresignedUrlLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1754553406686": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodPresignedDashurlOptions",
              "ApiGatewayMethodPresignedDashurlGet"
            ]
          },
          "GetPresignedUrlLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetPresignedUrlLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-ap-southeast-2-eccec8d5-1372",
            "Export": {
              "Name": "sls-image-resizer-dev-ServerlessDeploymentBucketName"
            }
          },
          "GetPresignedUrlLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetPresignedUrlLambdaVersion48b7gTxtzfG4EEgt3ioCZOw7ds2snQAVLQ7n5rQzC0M"
            },
            "Export": {
              "Name": "sls-image-resizer-dev-GetPresignedUrlLambdaFunctionQualifiedArn"
            }
          },
          "ImageProcessorLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ImageProcessorLambdaVersionCulWCjSk1szd7hG5doMn7i6nk9PhVnfZciL8RGJBXk"
            },
            "Export": {
              "Name": "sls-image-resizer-dev-ImageProcessorLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-image-resizer-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: image-resizer\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs18.x\r\n  region: ap-southeast-2\r\n  iamRoleStatements:\r\n    - Effect: Allow\r\n      Action:\r\n        - s3:GetObject\r\n        - s3:PutObject\r\n      Resource: arn:aws:s3:::image-resizer-uploads/*\r\n\r\nfunctions:\r\n  getPresignedUrl:\r\n    handler: getPresignedUrl/index.handler\r\n    events:\r\n      - http:\r\n          path: presigned-url\r\n          method: get\r\n          cors: true\r\n\r\n  imageProcessor:\r\n    handler: imageProcessor/index.handler\r\n    events:\r\n      - s3:\r\n          bucket: image-resizer-uploads\r\n          event: s3:ObjectCreated:*\r\n          rules:\r\n            - prefix: uploads/original/\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "20273528-bbaf-4880-8f1c-06cab77c940a",
    "orgName": "zigron",
    "userId": "cwxDWTQldqxBT8KPPN",
    "userName": "zigron",
    "serviceProviderAwsAccountId": "562404437852",
    "serviceProviderAwsCfStackName": "image-resizer-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:ap-southeast-2:562404437852:stack/image-resizer-dev/70131270-729f-11f0-bdad-0a9e26c0a6a9",
    "serviceProviderAwsCfStackCreated": "2025-08-06T08:29:16.136Z",
    "serviceProviderAwsCfStackUpdated": "2025-08-07T06:44:38.781Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "ImageProcessorLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-southeast-2:562404437852:function:image-resizer-dev-imageProcessor:3",
        "Description": "Current Lambda function version",
        "ExportName": "sls-image-resizer-dev-ImageProcessorLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetPresignedUrlLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-southeast-2:562404437852:function:image-resizer-dev-getPresignedUrl:3",
        "Description": "Current Lambda function version",
        "ExportName": "sls-image-resizer-dev-GetPresignedUrlLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://90la2ucvwg.execute-api.ap-southeast-2.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-image-resizer-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-ap-southeast-2-eccec8d5-1372",
        "ExportName": "sls-image-resizer-dev-ServerlessDeploymentBucketName"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "GetPresignedUrlLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/image-resizer-dev-getPresignedUrl"
          }
        },
        "ImageProcessorLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/image-resizer-dev-imageProcessor"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "image-resizer",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/image-resizer-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/image-resizer-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:GetObject",
                        "s3:PutObject"
                      ],
                      "Resource": "arn:aws:s3:::image-resizer-uploads/*"
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "image-resizer",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "GetPresignedUrlLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-ap-southeast-2-eccec8d5-1372",
              "S3Key": "serverless/image-resizer/dev/1754553425290-2025-08-07T07:57:05.290Z/image-resizer.zip"
            },
            "Handler": "getPresignedUrl/index.handler",
            "Runtime": "nodejs18.x",
            "FunctionName": "image-resizer-dev-getPresignedUrl",
            "MemorySize": 1024,
            "Timeout": 6,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "GetPresignedUrlLogGroup"
          ]
        },
        "ImageProcessorLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-ap-southeast-2-eccec8d5-1372",
              "S3Key": "serverless/image-resizer/dev/1754553425290-2025-08-07T07:57:05.290Z/image-resizer.zip"
            },
            "Handler": "imageProcessor/index.handler",
            "Runtime": "nodejs18.x",
            "FunctionName": "image-resizer-dev-imageProcessor",
            "MemorySize": 1024,
            "Timeout": 6,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "ImageProcessorLogGroup"
          ]
        },
        "GetPresignedUrlLambdaVersion48b7gTxtzfG4EEgt3ioCZOw7ds2snQAVLQ7n5rQzC0M": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "GetPresignedUrlLambdaFunction"
            },
            "CodeSha256": "2bLiKJwt5+8smfFmD+FiSQrhDdRVJX06lrHg+6ecn38="
          }
        },
        "ImageProcessorLambdaVersionCulWCjSk1szd7hG5doMn7i6nk9PhVnfZciL8RGJBXk": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "ImageProcessorLambdaFunction"
            },
            "CodeSha256": "2bLiKJwt5+8smfFmD+FiSQrhDdRVJX06lrHg+6ecn38="
          }
        },
        "S3BucketImageresizeruploads": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "image-resizer-uploads",
            "NotificationConfiguration": {
              "LambdaConfigurations": [
                {
                  "Event": "s3:ObjectCreated:*",
                  "Function": {
                    "Fn::GetAtt": [
                      "ImageProcessorLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Filter": {
                    "S3Key": {
                      "Rules": [
                        {
                          "Name": "prefix",
                          "Value": "uploads/original/"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "DependsOn": [
            "ImageProcessorLambdaPermissionImageresizeruploadsS3"
          ]
        },
        "ImageProcessorLambdaPermissionImageresizeruploadsS3": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "ImageProcessorLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "s3.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":s3:::image-resizer-uploads"
                ]
              ]
            },
            "SourceAccount": {
              "Ref": "AWS::AccountId"
            }
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "dev-image-resizer",
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourcePresignedDashurl": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "presigned-url",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodPresignedDashurlOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourcePresignedDashurl"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodPresignedDashurlGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourcePresignedDashurl"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "GetPresignedUrlLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "GetPresignedUrlLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayDeployment1754553406686": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "dev"
          },
          "DependsOn": [
            "ApiGatewayMethodPresignedDashurlOptions",
            "ApiGatewayMethodPresignedDashurlGet"
          ]
        },
        "GetPresignedUrlLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "GetPresignedUrlLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-ap-southeast-2-eccec8d5-1372",
          "Export": {
            "Name": "sls-image-resizer-dev-ServerlessDeploymentBucketName"
          }
        },
        "GetPresignedUrlLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "GetPresignedUrlLambdaVersion48b7gTxtzfG4EEgt3ioCZOw7ds2snQAVLQ7n5rQzC0M"
          },
          "Export": {
            "Name": "sls-image-resizer-dev-GetPresignedUrlLambdaFunctionQualifiedArn"
          }
        },
        "ImageProcessorLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "ImageProcessorLambdaVersionCulWCjSk1szd7hG5doMn7i6nk9PhVnfZciL8RGJBXk"
          },
          "Export": {
            "Name": "sls-image-resizer-dev-ImageProcessorLambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/dev"
              ]
            ]
          },
          "Export": {
            "Name": "sls-image-resizer-dev-ServiceEndpoint"
          }
        }
      }
    }
  }
}